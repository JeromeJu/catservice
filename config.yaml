log_level: debug


plank:
  job_url_template: 'https://tekton-releases.appspot.com/build/tekton-prow/{{if or (eq .Spec.Type "presubmit") (eq .Spec.Type "batch")}}pr-logs/pull{{with .Spec.Refs}}/{{.Org}}_{{.Repo}}{{end}}{{else}}logs{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://tekton-releases.appspot.com/pr/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://prow.tekton.dev/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}).'
  pod_pending_timeout: 60m

tide:
  queries:
  - repos:
    - bobcatfish/catservice
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
  merge_method:
    bobcatfish/catservice: rebase
  target_url: http://35.244.148.160/tide

presubmits:
  bobcatfish/catservice:
  - name: do-the-pipeline
    agent: tekton-pipeline
    rerun_command: "/run do-the-pipeline"
    trigger: "(?m)^/run do-the-pipeline,?(\\s+|$)"
    always_run: true
    skip_report: false
    pipeline_run_spec:
      trigger:
        type: manual
      pipelineRef:
        name: special-pipeline
      resources:
      - name: git
        resourceRef:
          name: PROW_IMPLICIT_GIT_REF

#presubmits:
#  bobcatfish/catservice:
#  - name: some-kinda-test
#    agent: kubernetes
#    always_run: true
#    rerun_command: "/test pull-tekton-cli-build-tests"
#    trigger: "(?m)^/test (all|pull-tekton-cli-build-tests),?(\\s+|$)"
#    spec:
#      containers:
#      - image: gcr.io/tekton-releases/tests/test-runner@sha256:a4a64b2b70f85a618bbbcc6c0b713b313b2e410504dee24c9f90ec6fe3ebf63f
#        imagePullPolicy: Always
#        args:
#        - "--scenario=kubernetes_execute_bazel"
#        - "--clean"
#        - "--job=$(JOB_NAME)"
#        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
#        - "--root=/go/src"
#        - "--service-account=/etc/test-account/service-account.json"
#        - "--upload=gs://tekton-prow/pr-logs"
#        - "--" # end bootstrap args, scenario args below
#        - "--" # end kubernetes_execute_bazel flags (consider following flags as text)
#        - "./test/presubmit-tests.sh"
#        - "--build-tests"
#        volumeMounts:
#        - name: test-account
#          mountPath: /etc/test-account
#          readOnly: true
#        env:
#        - name: GOOGLE_APPLICATION_CREDENTIALS
#          value: /etc/test-account/service-account.json
#        - name: E2E_CLUSTER_REGION
#          value: us-central1
#      volumes:
#      - name: test-account
#        secret:
#          secretName: test-account
